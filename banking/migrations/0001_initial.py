# Generated by Django 5.1.1 on 2024-10-16 17:21

import datetime
import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='account',
            fields=[
                ('acc_no', models.BigIntegerField(blank=True, primary_key=True, serialize=False, unique=True)),
                ('ifsc', models.CharField(default='YOURBANK001', max_length=11, validators=[django.core.validators.MinLengthValidator(11)])),
                ('acc_type', models.CharField(choices=[('SB', 'Savings Account'), ('CA', 'Current Account'), ('SA', 'Salary Account'), ('FD', 'Fixed Deposit Account')], default='SB', max_length=2)),
                ('acc_status', models.CharField(choices=[('F', 'FROZEN Account'), ('A', 'ACTIVE Account'), ('L', 'LOW BALANCE Account')], default='A', max_length=1)),
                ('remarks', models.TextField(default='No remarks', max_length=1000)),
                ('date_of_opening', models.DateTimeField(auto_now_add=True)),
                ('acc_balance', models.BigIntegerField(default=0)),
                ('min_balance', models.BigIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='customer',
            fields=[
                ('cin', models.BigIntegerField(blank=True, primary_key=True, serialize=False, unique=True)),
                ('fname', models.CharField(max_length=255)),
                ('lname', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], default='M', max_length=1)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.BigIntegerField(default=9999999999, unique=True, validators=[django.core.validators.MaxValueValidator(9999999999), django.core.validators.MinValueValidator(1000000000)])),
                ('date_of_birth', models.DateField()),
                ('door_no', models.CharField(default='None', max_length=20)),
                ('street_name', models.CharField(default='None', max_length=255)),
                ('city', models.CharField(default='None', max_length=255)),
                ('pin_code', models.IntegerField(default=100000, validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(100000)])),
                ('pan_no', models.CharField(max_length=10, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(10)])),
            ],
        ),
        migrations.CreateModel(
            name='employee',
            fields=[
                ('employee_id', models.BigIntegerField(default=100000, primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(100000)])),
                ('fname', models.CharField(max_length=255)),
                ('lname', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], default='M', max_length=1)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.BigIntegerField(default=9999999999, unique=True, validators=[django.core.validators.MaxValueValidator(9999999999), django.core.validators.MinValueValidator(1000000000)])),
                ('date_of_birth', models.DateField()),
                ('door_no', models.CharField(default='None', max_length=20)),
                ('street_name', models.CharField(default='None', max_length=255)),
                ('city', models.CharField(default='None', max_length=255)),
                ('pin_code', models.IntegerField(default=100000, validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(100000)])),
                ('pan_no', models.CharField(max_length=10, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(10)])),
                ('designation', models.CharField(default='employee', max_length=255)),
                ('branch', models.CharField(default='main', max_length=255)),
                ('acc_in_charge', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='loan',
            fields=[
                ('loan_id', models.BigIntegerField(default=1000000000, primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(9999999999), django.core.validators.MinValueValidator(1000000000)])),
                ('loan_issue_date', models.DateField(default=datetime.date.today)),
                ('loan_amt', models.BigIntegerField(default=1)),
                ('interest', models.DecimalField(decimal_places=2, default=Decimal('7.00'), max_digits=5)),
                ('next_inst_date', models.DateField(default=datetime.date.today)),
                ('loan_end_date', models.DateField(default=datetime.date.today)),
                ('loan_status', models.CharField(choices=[('A', 'ACTIVE'), ('P', 'PENDING DUE'), ('C', 'COMPLETED')], default='A', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='atm_cards',
            fields=[
                ('card_no', models.BigIntegerField(default=1111222233334444, primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(9999999999999999), django.core.validators.MinValueValidator(1000000000000000)])),
                ('card_type', models.CharField(choices=[('B', 'Basic'), ('P', 'Platinum'), ('E', 'Elite')], default='B', max_length=1)),
                ('cred_debt', models.CharField(choices=[('D', 'DEBIT'), ('C', 'CREDIT')], default='D', max_length=1)),
                ('monthly_limit', models.BigIntegerField(default=25000)),
                ('exp_date', models.DateField()),
                ('cvv', models.IntegerField(default=111, validators=[django.core.validators.MaxValueValidator(999), django.core.validators.MinValueValidator(100)])),
                ('issue_date', models.DateField(default=datetime.date.today)),
                ('acc_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='banking.account')),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='cin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts_by_cin', to='banking.customer'),
        ),
        migrations.CreateModel(
            name='acc_atm_cards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='banking.atm_cards')),
                ('phone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atm_cards_by_phone', to='banking.customer', to_field='phone')),
            ],
        ),
        migrations.CreateModel(
            name='customer_credentials',
            fields=[
                ('mtpin', models.IntegerField(default=1111, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(9999)])),
                ('mpin', models.IntegerField(default=1111, validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(9999)])),
                ('user_id', models.CharField(default='user01', max_length=100, primary_key=True, serialize=False)),
                ('password', models.CharField(default='user01', max_length=15)),
                ('cin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_credentials_by_cin', to='banking.customer')),
                ('phone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_credentials_by_phone', to='banking.customer', to_field='phone')),
            ],
        ),
        migrations.CreateModel(
            name='employee_credentials',
            fields=[
                ('user_id', models.CharField(default='user01', max_length=100, primary_key=True, serialize=False)),
                ('password', models.CharField(default='user01', max_length=15)),
                ('employee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_credentials_by_employee_id', to='banking.employee')),
                ('phone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_credentials_by_phone', to='banking.employee', to_field='phone')),
            ],
        ),
        migrations.CreateModel(
            name='installments',
            fields=[
                ('installment_id', models.BigIntegerField(default=111111, primary_key=True, serialize=False)),
                ('installment_time', models.DateTimeField(auto_now_add=True)),
                ('installment_amt', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('loan_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='banking.loan')),
            ],
        ),
        migrations.CreateModel(
            name='transactions',
            fields=[
                ('trans_id', models.BigIntegerField(blank=True, primary_key=True, serialize=False, unique=True, verbose_name='Transaction ID')),
                ('trans_time', models.DateTimeField(auto_now_add=True, verbose_name='Transaction Time')),
                ('trans_amt', models.DecimalField(decimal_places=2, default=1, max_digits=10, verbose_name='Transaction Amount')),
                ('trans_status', models.CharField(choices=[('S', 'SUCCESS'), ('F', 'FAILED')], default='S', max_length=1, verbose_name='Status')),
                ('remarks', models.TextField(default='No remarks', max_length=1000, verbose_name='Remarks')),
                ('from_acc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions_from_account', to='banking.account', verbose_name='From Account')),
                ('to_acc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions_to_account', to='banking.account', verbose_name='To Account')),
            ],
        ),
    ]
